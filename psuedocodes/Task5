function _printf(const char *format, ...)
    va_list args
    va_start(args, format)

    num_characters_printed = 0

    char buffer[1024]  // Create a local buffer with a size of 1024 characters
    buffer_index = 0  // Initialize the buffer index

    for each character, c, in format
        if c is not '%'
            buffer[buffer_index] = c
            buffer_index += 1
            num_characters_printed += 1
            if buffer_index is 1024
                write(buffer, buffer_index)  // Flush the buffer to stdout
                buffer_index = 0
        else
            c = next character
            if c is 'S'
                // Fetch the string argument using va_arg
                char *str = va_arg(args, char *)

                // Print the string with non-printable characters escaped
                for each character, ch, in str
                    if ch is a non-printable character (0 <= ASCII value < 32 or >= 127)
                        // Print the character as "\x" followed by the ASCII code in hexadecimal (2 characters)
                        buffer[buffer_index] = '\\'
                        buffer_index += 1
                        buffer[buffer_index] = 'x'
                        buffer_index += 1
                        hexadecimal_code = convert ch to hexadecimal
                        buffer[buffer_index] = hexadecimal_code[0]
                        buffer_index += 1
                        buffer[buffer_index] = hexadecimal_code[1]
                        buffer_index += 1
                    else
                        // Print the printable character as is
                        buffer[buffer_index] = ch
                        buffer_index += 1
                    num_characters_printed += 1

                if buffer_index is 1024
                    write(buffer, buffer_index)  // Flush the buffer to stdout
                    buffer_index = 0
            else
                // Handle other format specifiers and buffer them as necessary, similar to the previous pseudocode

    if buffer_index > 0
        write(buffer, buffer_index)  // Flush any remaining characters in the buffer to stdout

    va_end(args)
    return num_characters_printed
>>>>>>> 724c019f8e39b6d9eedb83f97e396d96a23fc367
